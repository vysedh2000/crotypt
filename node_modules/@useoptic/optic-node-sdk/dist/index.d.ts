interface IOptions {
    enabled?: boolean;
    uploadUrl?: string;
    console?: boolean;
    log?: boolean;
    framework?: string;
}
interface IHydrateBody {
    response?: Function;
    request?: Function;
}
export default class Optic {
    protected config: IOptions;
    private userAgent;
    constructor(options: IOptions);
    buildUserAgent(framework?: string): string;
    static formatObject(req: any, res: any, hydrate?: IHydrateBody): {
        http: {
            response: {};
            request: {};
        };
        optic: {};
    };
    sendToConsole(obj: any): void;
    sendToUrl(obj: any): Promise<void>;
    captureHttpRequest(req: any, res: any, hydrate?: IHydrateBody): void;
}
export {};
//# sourceMappingURL=index.d.ts.map