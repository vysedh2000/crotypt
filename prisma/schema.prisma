// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id         String    @id @default(uuid())
  email      String?    
  username   String?  
  password   String
  totp_key   Bytes?
  last_login DateTime?
  uid        String?   @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Session {
  id                  String    @id
  expires_at          DateTime
  user_id             String?
}

model User {
  id         String     @id @default(uuid())
  role_id    Int
  wallet_id  Int?        @unique
  email      String      @unique
  name       String?      @unique
  username   String      @unique
  country    String     
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  auth_id    String?     @unique
  role       Role       @relation(references: [id], fields: [role_id])
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique
  user User[]
}

model Wallet {
  id   Int    @id @default(autoincrement())
  uid  String @unique
  balance String
  ccy  String
}

model Asset {
  id          Int   @id @default(autoincrement())
  wallet_id   Int
  crypto_id   Int?
  stock_id    Int?
  assetType   AssetType
  quantity    Float
}

model Crypto {
  id      Int   @id @default(autoincrement()) @unique
  name    String
  price   Float
  ccy     String
  volume  Float
  imageUrl String
  symbol  String @unique
}

model Stock {
  id      Int   @id @default(autoincrement()) @unique
  name    String
  ccy     String
  price   Float
  imageUrl String
  volume  Float
  symbol  String @unique
}

model CryptoHistory {
  id      Int   @id @default(autoincrement()) @unique
  symbol     String
  price     Float
  ccy       String
  time      String
  insertAt   DateTime     @default(now())
}

model StockHistory {
  id    Int @id @default(autoincrement())   @unique
  symbol    String
  price     Float
  ccy       String
  time      String
  insertAt    DateTime    @default(now())
}

enum AssetType {
  CRYPTO
  STOCK
}